<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.12hhxnd0iflhg21dragpe10bdl00'>
            <connection class='textscan' directory='C:/Users/akank/Downloads' filename='worldometer_coronavirus_summary_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.12hhxnd0iflhg21dragpe10bdl00' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_or_critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[serious_or_critical]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>serious_or_critical</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths_per_1m_population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_1234830757114236928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([total_deaths] / [total_confirmed]) * 100' />
      </column>
      <column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per 1M Population' datatype='real' name='[total_tests_per_1m_population]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/akank/AppData/Local/Temp/TableauTemp/#TableauTemp_0z3xr8s1k55zro1bp8g2903bdgn3.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/22/2025 03:41:01 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_confirmed</remote-alias>
              <ordinal>2</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>212</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_recovered</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_recovered</remote-alias>
              <ordinal>4</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>active_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[active_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>active_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>193</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>serious_or_critical</remote-name>
              <remote-type>5</remote-type>
              <local-name>[serious_or_critical]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>serious_or_critical</remote-alias>
              <ordinal>6</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_1m_population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_1m_population</remote-alias>
              <ordinal>7</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_1m_population</remote-alias>
              <ordinal>8</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>206</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>9</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_1m_population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_1m_population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_1m_population</remote-alias>
              <ordinal>10</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>11</ordinal>
              <family>worldometer_coronavirus_summary_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <object-id>[worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_recovered:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#67bf5c'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#6dccda'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ad8bc9'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#cdcc5d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_CD06A055EA6C482886A7BFBF931BC4C7'>
            <properties context=''>
              <relation connection='textscan.12hhxnd0iflhg21dragpe10bdl00' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='total_recovered' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='serious_or_critical' ordinal='6' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
                  <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
                  <column datatype='real' name='total_tests' ordinal='9' />
                  <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='population' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Dual aixa'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dual axis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_recovered:qk] + [federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk])</rows>
        <cols>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{E23C0DE1-7F97-409C-AFA7-1AA50AF41D02}' />
    </worksheet>
    <worksheet name='confirm vs dearhs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
              <size column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='shape' value=':filled/square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]</rows>
        <cols>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]</cols>
      </table>
      <simple-id uuid='{009441C5-B8DD-4851-82BA-AAC1A5813F22}' />
    </worksheet>
    <worksheet name='global cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' />
              <lod column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
              <lod column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[Latitude (generated)]</rows>
        <cols>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C4CC20FA-3870-4835-920B-539992E11C95}' />
    </worksheet>
    <worksheet name='mortality rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Mortality Rate' datatype='real' name='[Calculation_1234830757114236928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([total_deaths] / [total_confirmed]) * 100' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1234830757114236928]' derivation='Sum' name='[sum:Calculation_1234830757114236928:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:Calculation_1234830757114236928:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</rows>
        <cols>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:Calculation_1234830757114236928:qk]</cols>
      </table>
      <simple-id uuid='{C14D0CF8-40AB-4AC0-A0FC-4BA429CDE88A}' />
    </worksheet>
    <worksheet name='top 10 confimed contry'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Confirmed Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-transparency' value='216' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]</rows>
        <cols>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{3E57866E-82F1-484C-BF33-CA0A98A26821}' />
    </worksheet>
    <worksheet name='top 10 death cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Deaths Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' />
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' />
              <text column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
              <text column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7C7FD0F3-8A20-4EE7-8082-C35255F4C7B7}' />
    </worksheet>
    <worksheet name='top 10 recovery'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recovery</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.19d3csg0csw8vk1dn7oac0xee2u9' />
          </datasources>
          <datasource-dependencies datasource='federated.19d3csg0csw8vk1dn7oac0xee2u9'>
            <column-instance column='[total_recovered]' derivation='Avg' name='[avg:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
              <size column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[avg:total_recovered:qk]' />
              <text column='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5822056B-E93B-4155-9FC4-9949751C0D28}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>COVID DATA ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='960' maxwidth='1850' minheight='760' minwidth='320' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='6118' id='20' type-v2='title' w='99034' x='483' y='999'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91884' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='7117'>
              <zone h='91884' id='7' type-v2='layout-basic' w='90042' x='483' y='7117'>
                <zone h='27857' id='3' name='global cases' w='61979' x='28546' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45883' id='5' name='top 10 confimed contry' w='28063' x='483' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46001' id='6' name='top 10 death cases' w='28063' x='483' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27273' id='11' name='top 10 recovery' w='23295' x='28546' y='71728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='27273' id='13' name='confirm vs dearhs' w='38684' x='51841' y='71728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36754' id='15' name='Dual aixa' w='31863' x='28546' y='34974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='36754' id='17' name='mortality rate' w='30116' x='60409' y='34974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='149' h='91884' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='8992' x='90525' y='7117'>
                <zone h='9114' id='10' name='top 10 death cases' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' type-v2='color' w='8992' x='90525' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29963' id='12' name='top 10 recovery' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' type-v2='color' w='8992' x='90525' y='16231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='16854' id='14' name='confirm vs dearhs' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' type-v2='size' w='8992' x='90525' y='46194'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8989' id='16' name='Dual aixa' pane-specification-id='1' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' type-v2='color' w='8992' x='90525' y='63048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold'>COVID DATA ANALYSIS</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='23' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone h='6118' id='20' type-v2='title' w='99034' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45883' id='5' is-fixed='true' name='top 10 confimed contry' w='28063' x='483' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='260' h='27857' id='3' is-fixed='true' name='global cases' w='61979' x='28546' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36754' id='15' is-fixed='true' name='Dual aixa' w='31863' x='28546' y='34974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8989' id='16' name='Dual aixa' pane-specification-id='1' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' type-v2='color' w='8992' x='90525' y='63048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36754' id='17' is-fixed='true' name='mortality rate' w='30116' x='60409' y='34974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46001' id='6' is-fixed='true' name='top 10 death cases' w='28063' x='483' y='53000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='10' name='top 10 death cases' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' type-v2='color' w='8992' x='90525' y='7117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='27273' id='11' is-fixed='true' name='top 10 recovery' w='23295' x='28546' y='71728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='29963' id='12' name='top 10 recovery' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' type-v2='color' w='8992' x='90525' y='16231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='27273' id='13' is-fixed='true' name='confirm vs dearhs' w='38684' x='51841' y='71728'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16854' id='14' name='confirm vs dearhs' pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' type-v2='size' w='8992' x='90525' y='46194'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{329309EB-C161-46BA-961A-2F0FE1CF0397}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='top 10 confimed contry'>
      <cards>
        <edge name='left'>
          <strip size='154'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{771B0705-AEC5-413D-8BDA-4D882B1CE085}' />
    </window>
    <window class='worksheet' name='global cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCFCDE01-6728-4A7E-B825-C8082BFD6E65}' />
    </window>
    <window class='worksheet' name='top 10 death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17237A67-32E9-4AA2-B648-C98F7DA5A34E}' />
    </window>
    <window class='worksheet' name='top 10 recovery'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05741745-E28A-4CE0-81A5-26FD200EED65}' />
    </window>
    <window class='worksheet' name='confirm vs dearhs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A8F4666-6B0E-4330-B52A-C75BBE907CE6}' />
    </window>
    <window class='worksheet' name='mortality rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB5962CE-3302-4B9E-A626-27E4FA9479D3}' />
    </window>
    <window class='worksheet' name='Dual aixa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19d3csg0csw8vk1dn7oac0xee2u9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[sum:total_deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0A2D90B-294A-47FC-BB4D-44396378B528}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Dual aixa'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='confirm vs dearhs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='global cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='mortality rate' />
        <viewpoint name='top 10 confimed contry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 death cases' />
        <viewpoint name='top 10 recovery'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.19d3csg0csw8vk1dn7oac0xee2u9].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{E0003BDA-6D19-46D2-8905-9C284A43B747}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dual aixa' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='confirm vs dearhs' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='global cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mortality rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 10 confimed contry' width='192'>
      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
      wtH+H4CVXRaA1ieVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 death cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 10 recovery' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
